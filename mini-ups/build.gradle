plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.google.protobuf" version "0.9.2"
}

group = 'edu.duke.ece568.team24'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'com.google.protobuf:protobuf-java:3.22.3'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava.dependsOn generateProto

sourceSets {
    main {
        java {
            srcDirs += ['build/generated/source/proto/main/java', 'build/generated/source/proto/test/java']
        }
    }
}

protobuf {
  protoc {
	if (System.getProperty("os.name").toLowerCase().contains("mac")) {
		path = 'src/main/proto/protoc-mac'
	}
	else {
    	path = 'src/main/proto/protoc-linux'
	}
  }
}

